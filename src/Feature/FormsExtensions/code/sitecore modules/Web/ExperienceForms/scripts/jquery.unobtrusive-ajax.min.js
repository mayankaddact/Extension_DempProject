!function (c) { var p = "unobtrusiveAjaxClick", l = "unobtrusiveAjaxClickTarget"; function d(t, a) { for (var e = window, r = (t || "").split("."); e && r.length;)e = e[r.shift()]; return "function" == typeof e ? e : (a.push(t), Function.constructor.apply(null, a)) } function s(t) { return "GET" === t || "POST" === t } function h(i, t) { var a, n, u, o; (a = i.getAttribute("data-ajax-confirm")) && !window.confirm(a) || (n = c(i.getAttribute("data-ajax-loading")), o = parseInt(i.getAttribute("data-ajax-loading-duration"), 10) || 0, c.extend(t, { type: i.getAttribute("data-ajax-method") || void 0, url: i.getAttribute("data-ajax-url") || void 0, cache: "true" === (i.getAttribute("data-ajax-cache") || "").toLowerCase(), beforeSend: function (t) { var a, e, r; return e = t, s(r = u) || e.setRequestHeader("X-HTTP-Method-Override", r), !1 !== (a = d(i.getAttribute("data-ajax-begin"), ["xhr"]).apply(i, arguments)) && n.show(o), a }, complete: function () { n.hide(o), d(i.getAttribute("data-ajax-complete"), ["xhr", "status"]).apply(i, arguments) }, success: function (t, a, e) { var r, n, u; r = i, n = t, -1 === (e.getResponseHeader("Content-Type") || "text/html").indexOf("application/x-javascript") && (u = (r.getAttribute("data-ajax-mode") || "").toUpperCase(), c(r.getAttribute("data-ajax-update")).each(function (t, a) { switch (u) { case "BEFORE": c(a).prepend(n); break; case "AFTER": c(a).append(n); break; case "REPLACE-WITH": c(a).replaceWith(n); break; default: c(a).html(n) } })), d(i.getAttribute("data-ajax-success"), ["data", "status", "xhr"]).apply(i, arguments) }, error: function () { d(i.getAttribute("data-ajax-failure"), ["xhr", "status", "error"]).apply(i, arguments) } }), u = t.type.toUpperCase(), t.data instanceof FormData ? (t.processData = !1, t.contentType = !1, t.data.append("X-Requested-With", "XMLHttpRequest"), s(u) || (t.type = "POST", t.data.append("X-HTTP-Method-Override", u))) : (t.data.push({ name: "X-Requested-With", value: "XMLHttpRequest" }), s(u) || (t.type = "POST", t.data.push({ name: "X-HTTP-Method-Override", value: u }))), c.ajax(t)) } c(document).on("click", "a[data-ajax=true]", function (t) { t.preventDefault(), h(this, { url: this.href, type: "GET", data: [] }) }), c(document).on("click", "form[data-ajax=true] input[type=image]", function (t) { var a = t.target.name, e = c(t.target), r = c(e.parents("form")[0]), n = e.offset(); r.data(p, [{ name: a + ".x", value: Math.round(t.pageX - n.left) }, { name: a + ".y", value: Math.round(t.pageY - n.top) }]), setTimeout(function () { r.removeData(p) }, 0) }), c(document).on("click", "form[data-ajax=true] :submit", function (t) { var a = t.currentTarget.name, e = c(t.target), r = c(e.parents("form")[0]); r.data(p, a ? [{ name: a, value: t.currentTarget.value }] : []), r.data(l, e), setTimeout(function () { r.removeData(p), r.removeData(l) }, 0) }), c(document).on("submit", "form[data-ajax=true]", function (t) { var a = c(this).data(p) || [], e = c(this).data(l), r = e && (e.hasClass("cancel") || void 0 !== e.attr("formnovalidate")); if (t.preventDefault(), r || (!(n = c(this).data("unobtrusiveValidation")) || !n.validate || n.validate())) { var n, u; if (this.enctype && "multipart/form-data" === this.enctype) { for (var i = c(this), o = [], d = 0; d < a.length; d++) { var s = c(i).find("#" + a[d].name.replace(/\./g, "_")); o.push({ name: a[d].name, value: a[d].value }), 0 < s.length && (o.push({ name: a[d].name, value: c(s)[0].value }), c(s).remove()) } u = new FormData(i[0]); for (d = 0; d < o.length; d++)u.append(o[d].name, o[d].value) } else u = a.concat(c(this).serializeArray()); h(this, { url: this.action, type: this.method || "GET", data: u }) } }) }(jQuery);